---
#- name: Install prerequisites
#  become: true
#  apt: name={{ item }} update_cache=yes state=latest force_apt_get=yes
#  loop: [ 'python3-apt', 'aptitude' ]
#
#- name: Install MariaDB Packages
#  become: true
#  apt: name={{ item }} update_cache=yes state=latest
#  loop: [ 'mariadb-server', 'python3-pymysql' ]

- name: Start MariaDB service
  become: true
  service:
    name: mysql
    state: started

#- name: update mysql root password for all root accounts
#  become: true
#  mysql_user: name=root host={{ item }} password={{ mysql_root_password }} priv=*.*:ALL,GRANT
#  with_items:
#    - 127.0.0.1
#    - ::1
#    - localhost

- name: copy .my.cnf file with root password credentials
  become: true
  template: src=/my.cnf dest=/root/.my.cnf owner=root mode=0600

#- name: Set MySQL root password for localhost root account
#  mysql_user:
#    name: root
#    host: localhost
#    password: "{{ mysql_root_password }}"
#  become: true
#  notify: Restart MySQL

#- name: Update MySQL root password for localhost root account (5.7.x).
#  ansible.builtin.shell: >
#    mysql -u root -NBe
#    "ALTER USER 'root'@'localhost' IDENTIFIED BY '{{ mysql_root_password }}';
#    FLUSH PRIVILEGES;"
#  become: true
#  notify: Restart MySQL

#- name: Sets the root password
#  mysql_user:
#    name: root
#    password: "{{ mysql_root_password }}"
#    login_unix_socket: /var/run/mysqld/mysqld.sock

#- name: Removes all anonymous user accounts
#  mysql_user:
#    name: ''
#    host_all: yes
#    state: absent
#    login_user: root
#    login_password: "{{ mysql_root_password }}"
#
#- name: Removes the MySQL test database
#  mysql_db:
#    name: test
#    state: absent
#    login_user: root
#    login_password: "{{ mysql_root_password }}"

- name: Create MySql db
  mysql_db:
    name: "{{ mysql_database }}"
    state: present
    login_unix_socket: /var/run/mysqld/mysqld.sock
#    login_user: root
#    login_password: "{{ mysql_root_password }}"
  become: true

- name: Create table in MySQL database
  community.mysql.mysql_query:
#    login_user: root
#    login_password: "{{ mysql_root_password }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
    login_db: "{{ mysql_database }}"
    query: "CREATE TABLE IF NOT EXISTS {{ mysql_table }} (timestamp VARCHAR(255) PRIMARY KEY, jsoned_object VARCHAR(1023));"
  become: true
  notify: Restart MySQL